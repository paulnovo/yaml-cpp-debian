Description: Fix failing unit test when building shared libs
 The unit test was writing out the nodes in a different order than the test
 expected. Since the order isn't defined, the test was actually fine. So we
 check if the node is written out in one of two possible orders.
Author: Paul Novotny <paul@paulnovo.us>
Bug: https://code.google.com/p/yaml-cpp/issues/detail?id=277
Last-Update: 2015-02-20

--- a/test/node/node_test.cpp
+++ b/test/node/node_test.cpp
@@ -363,8 +363,13 @@
   blockNode["scalar"] = 1.01;
   blockNode["object"] = mapNode;
 
-  ExpectOutput("scalar: 1.01\nobject: {position: [1.01, 2.01, 3.01]}",
-               blockNode);
+  Emitter emitter;
+  emitter << blockNode;
+
+  ASSERT_TRUE(emitter.good());
+  std::string output1 = "scalar: 1.01\nobject: {position: [1.01, 2.01, 3.01]}";
+  std::string output2 = "object: {position: [1.01, 2.01, 3.01]}\nscalar: 1.01";
+  EXPECT_TRUE(output1 == emitter.c_str() || output2 == emitter.c_str());
 }
 
 TEST_F(NodeEmitterTest, NestBlockMapListNode) {
